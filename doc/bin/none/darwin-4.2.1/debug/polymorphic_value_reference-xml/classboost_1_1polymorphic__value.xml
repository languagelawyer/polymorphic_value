<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classboost_1_1polymorphic__value" kind="class" language="C++" prot="public">
    <compoundname>boost::polymorphic_value</compoundname>
    <includes refid="polymorphic__value_8hpp" local="no">polymorphic_value.hpp</includes>
    <templateparamlist>
      <param>
        <type>class cT</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classboost_1_1polymorphic__value_1a94d8dbae0d1adee2d97b176e7077166b" prot="private" static="no">
        <type>std::remove_const_t&lt; cT &gt;</type>
        <definition>using boost::polymorphic_value&lt; cT &gt;::T =  std::remove_const_t&lt;cT&gt;</definition>
        <argsstring></argsstring>
        <name>T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jon/DEV/polymorphic_value/include/boost/polymorphic_value.hpp" line="153" column="1" bodyfile="/Users/jon/DEV/polymorphic_value/include/boost/polymorphic_value.hpp" bodystart="153" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classboost_1_1polymorphic__value_1ad1d6018f269482160af2fa3c13ccb971" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
        </templateparamlist>
        <type>friend class</type>
        <definition>friend class polymorphic_value</definition>
        <argsstring></argsstring>
        <name>polymorphic_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jon/DEV/polymorphic_value/include/boost/polymorphic_value.hpp" line="161" column="1" bodyfile="/Users/jon/DEV/polymorphic_value/include/boost/polymorphic_value.hpp" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classboost_1_1polymorphic__value_1a20a64a96d6f4f0eb115a42e9a04d98cc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T_</type>
          </param>
          <param>
            <type>class...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>friend <ref refid="classboost_1_1polymorphic__value" kindref="compound">polymorphic_value</ref>&lt; T_ &gt;</type>
        <definition>polymorphic_value&lt;T_&gt; make_polymorphic_value</definition>
        <argsstring>(Ts &amp;&amp;... ts)</argsstring>
        <name>make_polymorphic_value</name>
        <param>
          <type>Ts &amp;&amp;...</type>
          <declname>ts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jon/DEV/polymorphic_value/include/boost/polymorphic_value.hpp" line="164" column="1" bodyfile="/Users/jon/DEV/polymorphic_value/include/boost/polymorphic_value.hpp" bodystart="442" bodyend="448"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classboost_1_1polymorphic__value_1a5a56ff6c5ed6bab1ddcfd192eaa0356b" prot="private" static="no" mutable="no">
        <type>T *</type>
        <definition>T* boost::polymorphic_value&lt; cT &gt;::ptr_</definition>
        <argsstring></argsstring>
        <name>ptr_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jon/DEV/polymorphic_value/include/boost/polymorphic_value.hpp" line="166" column="1" bodyfile="/Users/jon/DEV/polymorphic_value/include/boost/polymorphic_value.hpp" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classboost_1_1polymorphic__value_1a2801f3c64c93e27b178afb7a6a400ae0" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="structboost_1_1detail_1_1control__block" kindref="compound">detail::control_block</ref>&lt; T &gt; &gt;</type>
        <definition>std::unique_ptr&lt;detail::control_block&lt;T&gt; &gt; boost::polymorphic_value&lt; cT &gt;::cb_</definition>
        <argsstring></argsstring>
        <name>cb_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jon/DEV/polymorphic_value/include/boost/polymorphic_value.hpp" line="167" column="1" bodyfile="/Users/jon/DEV/polymorphic_value/include/boost/polymorphic_value.hpp" bodystart="167" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classboost_1_1polymorphic__value_1a557e152df1f08cce6c22f140ded2e264" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>boost::polymorphic_value&lt; cT &gt;::~polymorphic_value</definition>
        <argsstring>()=default</argsstring>
        <name>~polymorphic_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jon/DEV/polymorphic_value/include/boost/polymorphic_value.hpp" line="174" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classboost_1_1polymorphic__value_1a2083a6ae82d8efb2d4f803155e75931d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>boost::polymorphic_value&lt; cT &gt;::polymorphic_value</definition>
        <argsstring>()</argsstring>
        <name>polymorphic_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jon/DEV/polymorphic_value/include/boost/polymorphic_value.hpp" line="181" column="1" bodyfile="/Users/jon/DEV/polymorphic_value/include/boost/polymorphic_value.hpp" bodystart="181" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="classboost_1_1polymorphic__value_1acec77b524e52343a438327e8a15b6c78" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
          <param>
            <type>class C</type>
            <defval><ref refid="structboost_1_1default__copy" kindref="compound">default_copy</ref>&lt;U&gt;</defval>
          </param>
          <param>
            <type>class D</type>
            <defval><ref refid="structboost_1_1default__delete" kindref="compound">default_delete</ref>&lt;U&gt;</defval>
          </param>
        </templateparamlist>
        <type></type>
        <definition>boost::polymorphic_value&lt; cT &gt;::polymorphic_value</definition>
        <argsstring>(U *u, C copier=C{}, D deleter=D{})</argsstring>
        <name>polymorphic_value</name>
        <param>
          <type>U *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>C</type>
          <declname>copier</declname>
          <defval>C{}</defval>
        </param>
        <param>
          <type>D</type>
          <declname>deleter</declname>
          <defval>D{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>requires <computeroutput>U*</computeroutput> is convertible to <computeroutput>T*</computeroutput>. If <computeroutput>C</computeroutput> is <computeroutput><ref refid="structboost_1_1default__copy" kindref="compound">default_copy</ref>&lt;U&gt;</computeroutput> and <computeroutput>D</computeroutput> is <computeroutput><ref refid="structboost_1_1default__delete" kindref="compound">default_delete</ref>&lt;U&gt;</computeroutput>, requires <computeroutput>typeid(*u) == typeid(U)</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jon/DEV/polymorphic_value/include/boost/polymorphic_value.hpp" line="192" column="1" bodyfile="/Users/jon/DEV/polymorphic_value/include/boost/polymorphic_value.hpp" bodystart="192" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classboost_1_1polymorphic__value_1aae0a3c6f1b89355d1cf1d5e455ebe115" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>boost::polymorphic_value&lt; cT &gt;::polymorphic_value</definition>
        <argsstring>(const polymorphic_value &amp;p)</argsstring>
        <name>polymorphic_value</name>
        <param>
          <type>const <ref refid="classboost_1_1polymorphic__value" kindref="compound">polymorphic_value</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jon/DEV/polymorphic_value/include/boost/polymorphic_value.hpp" line="213" column="1" bodyfile="/Users/jon/DEV/polymorphic_value/include/boost/polymorphic_value.hpp" bodystart="213" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="classboost_1_1polymorphic__value_1a6a1dd0f7e67f28530ce8ed3360d3917b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>boost::polymorphic_value&lt; cT &gt;::polymorphic_value</definition>
        <argsstring>(const polymorphic_value&lt; U &gt; &amp;p)</argsstring>
        <name>polymorphic_value</name>
        <param>
          <type>const <ref refid="classboost_1_1polymorphic__value" kindref="compound">polymorphic_value</ref>&lt; U &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>requires <computeroutput>T</computeroutput> and <computeroutput>U</computeroutput> are different types, <computeroutput>std::remove_const_t&lt;U&gt;*</computeroutput> is convertible to <computeroutput>T*</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jon/DEV/polymorphic_value/include/boost/polymorphic_value.hpp" line="232" column="1" bodyfile="/Users/jon/DEV/polymorphic_value/include/boost/polymorphic_value.hpp" bodystart="232" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="classboost_1_1polymorphic__value_1a16c61464f909193c3cbbb7fe9d53b026" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>boost::polymorphic_value&lt; cT &gt;::polymorphic_value</definition>
        <argsstring>(polymorphic_value &amp;&amp;p) noexcept</argsstring>
        <name>polymorphic_value</name>
        <param>
          <type><ref refid="classboost_1_1polymorphic__value" kindref="compound">polymorphic_value</ref> &amp;&amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jon/DEV/polymorphic_value/include/boost/polymorphic_value.hpp" line="244" column="1" bodyfile="/Users/jon/DEV/polymorphic_value/include/boost/polymorphic_value.hpp" bodystart="244" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="classboost_1_1polymorphic__value_1a90b09117d68f702a8c429a21e35e3c84" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>boost::polymorphic_value&lt; cT &gt;::polymorphic_value</definition>
        <argsstring>(polymorphic_value&lt; U &gt; &amp;&amp;p)</argsstring>
        <name>polymorphic_value</name>
        <param>
          <type><ref refid="classboost_1_1polymorphic__value" kindref="compound">polymorphic_value</ref>&lt; U &gt; &amp;&amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>requires <computeroutput>T</computeroutput> and <computeroutput>U</computeroutput> are different types, <computeroutput>U*</computeroutput> is convertible to <computeroutput>T*</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jon/DEV/polymorphic_value/include/boost/polymorphic_value.hpp" line="259" column="1" bodyfile="/Users/jon/DEV/polymorphic_value/include/boost/polymorphic_value.hpp" bodystart="259" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="classboost_1_1polymorphic__value_1a11db148a8456681deb38227da4f708ce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>boost::polymorphic_value&lt; cT &gt;::polymorphic_value</definition>
        <argsstring>(U &amp;&amp;u)</argsstring>
        <name>polymorphic_value</name>
        <param>
          <type>U &amp;&amp;</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>requires <computeroutput>std::decay_t&lt;U&gt;</computeroutput> is not a <computeroutput><ref refid="classboost_1_1polymorphic__value" kindref="compound">polymorphic_value</ref></computeroutput>, <computeroutput>std::decay_t&lt;U&gt;*</computeroutput> is convertible to <computeroutput>T*</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jon/DEV/polymorphic_value/include/boost/polymorphic_value.hpp" line="280" column="1" bodyfile="/Users/jon/DEV/polymorphic_value/include/boost/polymorphic_value.hpp" bodystart="280" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="classboost_1_1polymorphic__value_1acdd609250313d23e1f2c936eb358384f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classboost_1_1polymorphic__value" kindref="compound">polymorphic_value</ref> &amp;</type>
        <definition>polymorphic_value&amp; boost::polymorphic_value&lt; cT &gt;::operator=</definition>
        <argsstring>(const polymorphic_value &amp;p)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classboost_1_1polymorphic__value" kindref="compound">polymorphic_value</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jon/DEV/polymorphic_value/include/boost/polymorphic_value.hpp" line="291" column="1" bodyfile="/Users/jon/DEV/polymorphic_value/include/boost/polymorphic_value.hpp" bodystart="291" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="classboost_1_1polymorphic__value_1a188f03176783a27f8bd9a311cefcf5d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
        </templateparamlist>
        <type><ref refid="classboost_1_1polymorphic__value" kindref="compound">polymorphic_value</ref> &amp;</type>
        <definition>polymorphic_value&amp; boost::polymorphic_value&lt; cT &gt;::operator=</definition>
        <argsstring>(const polymorphic_value&lt; U &gt; &amp;p)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classboost_1_1polymorphic__value" kindref="compound">polymorphic_value</ref>&lt; U &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>requires <computeroutput>T</computeroutput> and <computeroutput>U</computeroutput> are different types, <computeroutput>U*</computeroutput> is convertible to <computeroutput>T*</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jon/DEV/polymorphic_value/include/boost/polymorphic_value.hpp" line="318" column="1" bodyfile="/Users/jon/DEV/polymorphic_value/include/boost/polymorphic_value.hpp" bodystart="318" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="classboost_1_1polymorphic__value_1a1c4cd6abcaa99aebaa812fb3e4470c77" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classboost_1_1polymorphic__value" kindref="compound">polymorphic_value</ref> &amp;</type>
        <definition>polymorphic_value&amp; boost::polymorphic_value&lt; cT &gt;::operator=</definition>
        <argsstring>(polymorphic_value &amp;&amp;p) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classboost_1_1polymorphic__value" kindref="compound">polymorphic_value</ref> &amp;&amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jon/DEV/polymorphic_value/include/boost/polymorphic_value.hpp" line="335" column="1" bodyfile="/Users/jon/DEV/polymorphic_value/include/boost/polymorphic_value.hpp" bodystart="335" bodyend="344"/>
      </memberdef>
      <memberdef kind="function" id="classboost_1_1polymorphic__value_1a9b463889f89de101662c718025ebaaaf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
        </templateparamlist>
        <type><ref refid="classboost_1_1polymorphic__value" kindref="compound">polymorphic_value</ref> &amp;</type>
        <definition>polymorphic_value&amp; boost::polymorphic_value&lt; cT &gt;::operator=</definition>
        <argsstring>(polymorphic_value&lt; U &gt; &amp;&amp;p)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classboost_1_1polymorphic__value" kindref="compound">polymorphic_value</ref>&lt; U &gt; &amp;&amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>requires <computeroutput>T</computeroutput> and <computeroutput>U</computeroutput> are different types, <computeroutput>U*</computeroutput> is convertible to <computeroutput>T*</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jon/DEV/polymorphic_value/include/boost/polymorphic_value.hpp" line="355" column="1" bodyfile="/Users/jon/DEV/polymorphic_value/include/boost/polymorphic_value.hpp" bodystart="355" bodyend="361"/>
      </memberdef>
      <memberdef kind="function" id="classboost_1_1polymorphic__value_1a5acd0311904d561798092d7f7de9ac66" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
        </templateparamlist>
        <type><ref refid="classboost_1_1polymorphic__value" kindref="compound">polymorphic_value</ref> &amp;</type>
        <definition>polymorphic_value&amp; boost::polymorphic_value&lt; cT &gt;::operator=</definition>
        <argsstring>(U &amp;&amp;u)</argsstring>
        <name>operator=</name>
        <param>
          <type>U &amp;&amp;</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>requires <computeroutput>std::decay_t&lt;U&gt;</computeroutput> is not a <computeroutput><ref refid="classboost_1_1polymorphic__value" kindref="compound">polymorphic_value</ref></computeroutput>, <computeroutput>std::decay_t&lt;U&gt;*</computeroutput> is convertible to <computeroutput>T*</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jon/DEV/polymorphic_value/include/boost/polymorphic_value.hpp" line="377" column="1" bodyfile="/Users/jon/DEV/polymorphic_value/include/boost/polymorphic_value.hpp" bodystart="377" bodyend="381"/>
      </memberdef>
      <memberdef kind="function" id="classboost_1_1polymorphic__value_1a175d924543c99c3e52994c8bccdeaa3c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void boost::polymorphic_value&lt; cT &gt;::swap</definition>
        <argsstring>(polymorphic_value &amp;p) noexcept</argsstring>
        <name>swap</name>
        <param>
          <type><ref refid="classboost_1_1polymorphic__value" kindref="compound">polymorphic_value</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jon/DEV/polymorphic_value/include/boost/polymorphic_value.hpp" line="387" column="1" bodyfile="/Users/jon/DEV/polymorphic_value/include/boost/polymorphic_value.hpp" bodystart="387" bodyend="391"/>
      </memberdef>
      <memberdef kind="function" id="classboost_1_1polymorphic__value_1ae779dc2b4970d925da5007af62cbdcd7" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>boost::polymorphic_value&lt; cT &gt;::operator bool</definition>
        <argsstring>() const</argsstring>
        <name>operator bool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns true if there is a managed object, otherwise returns false. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jon/DEV/polymorphic_value/include/boost/polymorphic_value.hpp" line="398" column="1" bodyfile="/Users/jon/DEV/polymorphic_value/include/boost/polymorphic_value.hpp" bodystart="398" bodyend="398"/>
      </memberdef>
      <memberdef kind="function" id="classboost_1_1polymorphic__value_1ac604b027aa7d2a6b73ba3877d0c26f1c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T *</type>
        <definition>const T* boost::polymorphic_value&lt; cT &gt;::operator-&gt;</definition>
        <argsstring>() const</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>requires a managed object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jon/DEV/polymorphic_value/include/boost/polymorphic_value.hpp" line="401" column="1" bodyfile="/Users/jon/DEV/polymorphic_value/include/boost/polymorphic_value.hpp" bodystart="401" bodyend="404"/>
      </memberdef>
      <memberdef kind="function" id="classboost_1_1polymorphic__value_1ac0ecdc881e2daf8eb9e141c5f3ea4428" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T&amp; boost::polymorphic_value&lt; cT &gt;::value</definition>
        <argsstring>() const</argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>requires a managed object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jon/DEV/polymorphic_value/include/boost/polymorphic_value.hpp" line="407" column="1" bodyfile="/Users/jon/DEV/polymorphic_value/include/boost/polymorphic_value.hpp" bodystart="407" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="classboost_1_1polymorphic__value_1a259a128846c30f4510b4c02413d79ef3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T&amp; boost::polymorphic_value&lt; cT &gt;::operator*</definition>
        <argsstring>() const</argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>requires a managed object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jon/DEV/polymorphic_value/include/boost/polymorphic_value.hpp" line="413" column="1" bodyfile="/Users/jon/DEV/polymorphic_value/include/boost/polymorphic_value.hpp" bodystart="413" bodyend="416"/>
      </memberdef>
      <memberdef kind="function" id="classboost_1_1polymorphic__value_1abcf4c5dc21a78237fd06eb6850e47a17" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T* boost::polymorphic_value&lt; cT &gt;::operator-&gt;</definition>
        <argsstring>()</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>requires a managed object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jon/DEV/polymorphic_value/include/boost/polymorphic_value.hpp" line="419" column="1" bodyfile="/Users/jon/DEV/polymorphic_value/include/boost/polymorphic_value.hpp" bodystart="419" bodyend="422"/>
      </memberdef>
      <memberdef kind="function" id="classboost_1_1polymorphic__value_1a5f243aaa95e1d2903b34666390e6ef0a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; boost::polymorphic_value&lt; cT &gt;::value</definition>
        <argsstring>()</argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>requires a managed object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jon/DEV/polymorphic_value/include/boost/polymorphic_value.hpp" line="425" column="1" bodyfile="/Users/jon/DEV/polymorphic_value/include/boost/polymorphic_value.hpp" bodystart="425" bodyend="428"/>
      </memberdef>
      <memberdef kind="function" id="classboost_1_1polymorphic__value_1a310f940b602d0aa0ec325f7d14292d64" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; boost::polymorphic_value&lt; cT &gt;::operator*</definition>
        <argsstring>()</argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>requires a managed object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/jon/DEV/polymorphic_value/include/boost/polymorphic_value.hpp" line="431" column="1" bodyfile="/Users/jon/DEV/polymorphic_value/include/boost/polymorphic_value.hpp" bodystart="431" bodyend="434"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/jon/DEV/polymorphic_value/include/boost/polymorphic_value.hpp" line="37" column="1" bodyfile="/Users/jon/DEV/polymorphic_value/include/boost/polymorphic_value.hpp" bodystart="37" bodyend="-1"/>
    <listofallmembers>
      <member refid="classboost_1_1polymorphic__value_1a2801f3c64c93e27b178afb7a6a400ae0" prot="private" virt="non-virtual"><scope>boost::polymorphic_value</scope><name>cb_</name></member>
      <member refid="classboost_1_1polymorphic__value_1a20a64a96d6f4f0eb115a42e9a04d98cc" prot="private" virt="non-virtual"><scope>boost::polymorphic_value</scope><name>make_polymorphic_value</name></member>
      <member refid="classboost_1_1polymorphic__value_1ae779dc2b4970d925da5007af62cbdcd7" prot="public" virt="non-virtual"><scope>boost::polymorphic_value</scope><name>operator bool</name></member>
      <member refid="classboost_1_1polymorphic__value_1a259a128846c30f4510b4c02413d79ef3" prot="public" virt="non-virtual"><scope>boost::polymorphic_value</scope><name>operator*</name></member>
      <member refid="classboost_1_1polymorphic__value_1a310f940b602d0aa0ec325f7d14292d64" prot="public" virt="non-virtual"><scope>boost::polymorphic_value</scope><name>operator*</name></member>
      <member refid="classboost_1_1polymorphic__value_1ac604b027aa7d2a6b73ba3877d0c26f1c" prot="public" virt="non-virtual"><scope>boost::polymorphic_value</scope><name>operator-&gt;</name></member>
      <member refid="classboost_1_1polymorphic__value_1abcf4c5dc21a78237fd06eb6850e47a17" prot="public" virt="non-virtual"><scope>boost::polymorphic_value</scope><name>operator-&gt;</name></member>
      <member refid="classboost_1_1polymorphic__value_1acdd609250313d23e1f2c936eb358384f" prot="public" virt="non-virtual"><scope>boost::polymorphic_value</scope><name>operator=</name></member>
      <member refid="classboost_1_1polymorphic__value_1a188f03176783a27f8bd9a311cefcf5d6" prot="public" virt="non-virtual"><scope>boost::polymorphic_value</scope><name>operator=</name></member>
      <member refid="classboost_1_1polymorphic__value_1a1c4cd6abcaa99aebaa812fb3e4470c77" prot="public" virt="non-virtual"><scope>boost::polymorphic_value</scope><name>operator=</name></member>
      <member refid="classboost_1_1polymorphic__value_1a9b463889f89de101662c718025ebaaaf" prot="public" virt="non-virtual"><scope>boost::polymorphic_value</scope><name>operator=</name></member>
      <member refid="classboost_1_1polymorphic__value_1a5acd0311904d561798092d7f7de9ac66" prot="public" virt="non-virtual"><scope>boost::polymorphic_value</scope><name>operator=</name></member>
      <member refid="classboost_1_1polymorphic__value_1ad1d6018f269482160af2fa3c13ccb971" prot="private" virt="non-virtual"><scope>boost::polymorphic_value</scope><name>polymorphic_value</name></member>
      <member refid="classboost_1_1polymorphic__value_1a2083a6ae82d8efb2d4f803155e75931d" prot="public" virt="non-virtual"><scope>boost::polymorphic_value</scope><name>polymorphic_value</name></member>
      <member refid="classboost_1_1polymorphic__value_1acec77b524e52343a438327e8a15b6c78" prot="public" virt="non-virtual"><scope>boost::polymorphic_value</scope><name>polymorphic_value</name></member>
      <member refid="classboost_1_1polymorphic__value_1aae0a3c6f1b89355d1cf1d5e455ebe115" prot="public" virt="non-virtual"><scope>boost::polymorphic_value</scope><name>polymorphic_value</name></member>
      <member refid="classboost_1_1polymorphic__value_1a6a1dd0f7e67f28530ce8ed3360d3917b" prot="public" virt="non-virtual"><scope>boost::polymorphic_value</scope><name>polymorphic_value</name></member>
      <member refid="classboost_1_1polymorphic__value_1a16c61464f909193c3cbbb7fe9d53b026" prot="public" virt="non-virtual"><scope>boost::polymorphic_value</scope><name>polymorphic_value</name></member>
      <member refid="classboost_1_1polymorphic__value_1a90b09117d68f702a8c429a21e35e3c84" prot="public" virt="non-virtual"><scope>boost::polymorphic_value</scope><name>polymorphic_value</name></member>
      <member refid="classboost_1_1polymorphic__value_1a11db148a8456681deb38227da4f708ce" prot="public" virt="non-virtual"><scope>boost::polymorphic_value</scope><name>polymorphic_value</name></member>
      <member refid="classboost_1_1polymorphic__value_1a5a56ff6c5ed6bab1ddcfd192eaa0356b" prot="private" virt="non-virtual"><scope>boost::polymorphic_value</scope><name>ptr_</name></member>
      <member refid="classboost_1_1polymorphic__value_1a175d924543c99c3e52994c8bccdeaa3c" prot="public" virt="non-virtual"><scope>boost::polymorphic_value</scope><name>swap</name></member>
      <member refid="classboost_1_1polymorphic__value_1a94d8dbae0d1adee2d97b176e7077166b" prot="private" virt="non-virtual"><scope>boost::polymorphic_value</scope><name>T</name></member>
      <member refid="classboost_1_1polymorphic__value_1ac0ecdc881e2daf8eb9e141c5f3ea4428" prot="public" virt="non-virtual"><scope>boost::polymorphic_value</scope><name>value</name></member>
      <member refid="classboost_1_1polymorphic__value_1a5f243aaa95e1d2903b34666390e6ef0a" prot="public" virt="non-virtual"><scope>boost::polymorphic_value</scope><name>value</name></member>
      <member refid="classboost_1_1polymorphic__value_1a557e152df1f08cce6c22f140ded2e264" prot="public" virt="non-virtual"><scope>boost::polymorphic_value</scope><name>~polymorphic_value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
